npm install vue vue-resource bootstrap
touch index.html app.js

//HTML
<!-- index.html --> 

<!doctype html-->
<html>
<head>
  <meta charset='utf-8'>
  <title> Vue</title>
  
<!-- CSS --> 
  <link rel='stylesheet' href='node_modules/bootstrap/dist.css.bootstrap.min.css'>
</head>
<body>

<!-- navigation bar-->
<nav class='navbar navbar-deafult'>
  <div class='container-fluid'>
    <a class='navbar-brand'><i class='glyphicon glyphicon-bullhorn'></i> Vue Event Bulletin Board</a>
  </div>
</nav>

<!-- main body of application-->
<div class='container' id='events'>

  <!-- add an event form -->
  <div class='col-sm-6'>
    <div class='panel panel-default'>
       <h3> Add an Event</h3>
    </div>
    <div class='panel-body'>
    
    </div>
    
  </div>
  
 </div>
 
<!-- show the events -->
<div class='col-sm-6'>
  <div class='list-group'>
  
  </div>
 </div>
</div>

 <!-- JS -->
 <script src='node_modules/vue/dist/vue.js'></script>
 <script src='mode_modules/vue-resources/dist/vue-resource.js'></script>
 <script src='app.js'></script>

</body>
</html>

//app.js

new Vue({
   el: '#events',
   data: {},
   ready: function() {},
   methods: {}
});

   
//Event details THIS WILL NOT WORK IN FIREFOX
<!-- index.html -->

<div class='panel-heading'>
    <h3> Add an Event </h3>
  </div> 
  <div class="panel-body">
     
     <div class='form-group'>
        <input class='form-control' placeholder='Event Name' v-model='event.name'> 
        //v-model bounds to the ViewModel
      </div>
      
     <div class='form-group'>
       <textarea class='form-control' placeholder='Event Description" v-model='event.description'></textarea> 
     </div>
     
     <div class='form-group'>
       <input type='date' class='form-control' placeholder='Date' v-model='event.date'>
     </div>
     
     <button class='btn btn-primary' v-on='click: addEvent'> Submit</button>
     
     </div>
     
//Adding Event Data
//add.js

data: {
  event: { name: '', description: '', date: ''},
  events: []
  },
  
  //Anything within the ready function will run when the application loads
  ready: function(){
  
    this.fetchEvents():
  },
  
  methods: {
  
    fetchEvents: function() {
      var events = [
      {
        id: 1, 
        name: 'TIFF', 
        description: "Toronto Film Festival',
        date: '2015-09-10'
       },
       {
         id: 2,
         name: 'THe Martian Premiere',
         description: 'The Martian comes to theaters.",
         date: '2015-10-02',
        },
        {
         id: 3, 
         name: 'SXSW'
         description: 'Music, film, and interactive festival in Austin, TX.',
         date: '2016-03-11'
         },
        ];
        //$set is a convenience method provided by Vue that is similar to pushing 
        
        this.$set('events',events);
        },
        
        addEvent: function() {
          if(this.event.name) {
            this.events.push(this.event);
            this.event = { name: '', description: '', date: ''};
           }
          }
         }
         
 //Adding the Listing Area
 <!-- index.html --> 
 
 <div class='list-group'>
 
   <a href='#' class='list-group-item' v-repeat='event in events'>
     <h4 class='list-group-item-heading'>
       <i class='glyphicon glyphicon-bullhorn'></i>
       {{ event.name]]
     </h4>
     
     <h5> 
      <i class='glyphicon glyphicon-calendar' v-if='event.date'></i>
      {{ event.date }}
      
      <p class='list-group-item-text' v-if='event.description'> {{ event.description }}</p>
      
      <button class='btn btn-xs btn-danger' v-on='click:deleteEvent($index)'>Delete </delete>
     </a>
     
   </div>
   
   deleteEvent: function(index) {
     if(confirm('Are you sure you want to delete this event?')) {
     //$remove is a Vue convenience methos similar to splice
     this.events.$remove(index);
    }
  } 
     
//Switching to a Back End with push
//app.js

  this.$http.post('api/events', this.event).success(function(response) {
    
    this.events.push(this.event); 
    
    console.log('Event added!');
    
    }).error(function(error) {
      
      console.log(error); 
      
    }); 
    
    

        
          
          
          
          
          
          
          
          
    }
        
        
        
        
        
        
        
        
        
        
